openapi: 3.0.3
info:
  title: Figma Plugin Bridge (Supabase Edge)
  version: 1.0.0
servers:
  - url: https://{project}.functions.supabase.co/figma-plugin
    variables:
      project:
        default: YOUR_PROJECT_REF
paths:
  /healthz:
    get:
      summary: Liveness
      responses:
        '200':
          description: ok
  /enqueue:
    post:
      summary: Enqueue MCP call
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [projectId, toolset, tool]
              properties:
                projectId:
                  type: string
                  format: uuid
                cogoProjectId:
                  type: string
                  description: Internal COGO agent project identifier (optional)
                sessionId:
                  type: string
                shard:
                  type: integer
                idempotencyKey:
                  type: string
                toolset:
                  type: string
                  example: figma
                tool:
                  type: string
                  example: get_document_info
                params:
                  type: object
      responses:
        '200':
          description: queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  id:
                    type: string
                  trace_id:
                    type: string
        '400': { description: bad request }
  /result:
    get:
      summary: Poll for final result
      parameters:
        - in: query
          name: id
          schema: { type: string }
          required: true
      responses:
        '200': { description: status }
  /respond:
    post:
      summary: Human-in-the-loop response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [project_id, message_id, prompt_type, payload]
              properties:
                project_id: { type: string, format: uuid }
                session_id: { type: string }
                message_id: { type: string }
                prompt_type: { type: string }
                payload: { type: object }
                cogoProjectId:
                  type: string
                  description: Internal COGO agent project identifier (optional)
      responses:
        '200': { description: accepted }
  /metrics/project:
    get:
      summary: Project-scoped MCP metrics
      parameters:
        - in: query
          name: projectId
          required: true
          schema: { type: string, format: uuid }
        - in: query
          name: sinceMs
          schema: { type: integer, default: 86400000 }
        - in: query
          name: limit
          schema: { type: integer, default: 100 }
      responses:
        '200': { description: metrics }
  /compat/creatego:
    post:
      summary: CreateGo JSONConversionRequest compatibility
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id, project_id, page_id, is_whole_page_selected, projectId]
              properties:
                user_id: { type: string }
                session_id: { type: string }
                request_id: { type: string }
                project_id: { type: integer }
                page_id: { type: integer }
                is_whole_page_selected: { type: boolean }
                figma_json: { type: array, items: { type: object } }
                input_image: { type: string, nullable: true }
                image_type: { type: string, enum: [url, image/png, image/jpeg, image/svg+xml] }
                use_vision_corrections: { type: boolean }
                projectId: { type: string, format: uuid }
                cogoProjectId:
                  type: string
                  description: Internal COGO agent project identifier (optional)
      responses:
        '200': { description: queued }

  /compat/uui/variables/derive:
    post:
      summary: UUI variables derive (compat)
      description: |
        Compatibility bridge for UUI variables derive via figma-plugin namespace.
        For direct calls (recommended for Figma Plugin without queue), use `POST /figma-compat/uui/variables/derive` on the Edge host root.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id, page_id, page_name, creatego_json, projectId]
              properties:
                user_id: { type: string }
                session_id: { type: string }
                request_id: { type: string }
                page_id: { oneOf: [{type: integer}, {type: string}] }
                page_name: { type: string }
                creatego_json: { type: array, items: { type: object } }
                projectId: { type: string, format: uuid }
                cogoProjectId: { type: string }
      responses:
        '200': { description: queued }

  /compat/uui/symbols/map:
    post:
      summary: UUI symbols map (compat)
      description: |
        Compatibility bridge for UUI symbols map via figma-plugin namespace.
        For direct calls, use `POST /figma-compat/uui/symbols/map`.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id, page_id, variables, creatego_json, projectId]
              properties:
                user_id: { type: string }
                session_id: { type: string }
                request_id: { type: string }
                page_id: { oneOf: [{type: integer}, {type: string}] }
                variables: { type: object, additionalProperties: true }
                creatego_json: { type: array, items: { type: object } }
                projectId: { type: string, format: uuid }
                cogoProjectId: { type: string }
      responses:
        '200': { description: queued }

  /compat/uui/bdd/generate:
    post:
      summary: UUI BDD generate (compat)
      description: |
        Compatibility bridge for UUI BDD generate.
        For direct calls, use `POST /figma-compat/uui/bdd/generate`.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id, creatego_json, projectId]
              properties:
                user_id: { type: string }
                session_id: { type: string }
                request_id: { type: string }
                page_id: { oneOf: [{type: integer}, {type: string}] }
                symbol_mappings: { type: array, items: { type: object } }
                creatego_json: { type: array, items: { type: object } }
                event_list: { type: array, items: { type: object } }
                projectId: { type: string, format: uuid }
                cogoProjectId: { type: string }
      responses:
        '200': { description: queued }

  /compat/uui/bdd/refine:
    post:
      summary: UUI BDD refine (compat)
      description: |
        Compatibility bridge for UUI BDD refine.
        For direct calls, use `POST /figma-compat/uui/bdd/refine`.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id, page_id, current_bdd, refinement_queries, projectId]
              properties:
                user_id: { type: string }
                session_id: { type: string }
                request_id: { type: string }
                page_id: { oneOf: [{type: integer}, {type: string}] }
                current_bdd: { type: string }
                refinement_queries: { type: array, items: { type: string } }
                projectId: { type: string, format: uuid }
                cogoProjectId: { type: string }
      responses:
        '200': { description: queued }

  /compat/uui/actionflow/refine:
    post:
      summary: UUI ActionFlow refine (compat)
      description: |
        Compatibility bridge for UUI ActionFlow refine.
        For direct calls, use `POST /figma-compat/uui/actionflow/refine`.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id, page_id, flow_id, current_flow, refinement_queries, projectId]
              properties:
                user_id: { type: string }
                session_id: { type: string }
                request_id: { type: string }
                page_id: { oneOf: [{type: integer}, {type: string}] }
                flow_id: { type: string }
                current_flow: { type: object }
                refinement_queries: { type: array, items: { type: string } }
                projectId: { type: string, format: uuid }
                cogoProjectId: { type: string }
      responses:
        '200': { description: queued }


